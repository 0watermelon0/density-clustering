{
  "name": "density-clustering",
  "version": "1.0.2",
  "description": "Density Based Clustering in JavaScript",
  "main": "./lib/index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "^1.18.2",
    "should": "^3.3.1"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/LukaszKrawczyk/clustering.git"
  },
  "keywords": [
    "DBSCAN",
    "OPTICS",
    "clustering",
    "cluster",
    "analysis",
    "machine",
    "learning",
    "statistics"
  ],
  "author": {
    "name": "Lukasz Krawczyk"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/LukaszKrawczyk/clustering/issues"
  },
  "homepage": "https://github.com/LukaszKrawczyk/clustering",
  "readme": "# Density Based Clustering for JavaScript\r\n\r\n## Overview\r\n\r\n### DBSCAN\r\n\r\nDensity-based spatial clustering of applications with noise (DBSCAN) is one of the most popular algorithm for clustering data.\r\n\r\nhttp://en.wikipedia.org/wiki/DBSCAN\r\n\r\n### OPTICS\r\n\r\nOrdering points to identify the clustering structure (OPTICS) is an algorithm for clustering data similar to DBSCAN.\r\nThe main difference between OPTICS and DBSCAN is that it can handle data of varying densities.\r\n\r\nhttp://en.wikipedia.org/wiki/OPTICS_algorithm\r\n\r\n**Important**\r\n\r\nClustering returned by OPTICS is nearly indistinguishable from a clustering created by DBSCAN.\r\nTo extract different density-based clustering as well as hierarchical structure you need to analyse **reachability plot** generated by OPTICS.\r\n\r\nFor more information visit http://en.wikipedia.org/wiki/OPTICS_algorithm#Extracting_the_clusters\r\n\r\n## Installation\r\n\r\n```\r\nnpm install density-clustering\r\n```\r\n\r\n## Examples\r\n\r\n### DBSCAN\r\n```\r\nvar dataset = [\r\n    [1,1],[0,1],[1,0],\r\n    [10,10],[10,13],[13,13],\r\n    [54,54],[55,55],[89,89],[57,55]\r\n];\r\n\r\nvar dbscan = new DBSCAN();\r\nvar clusters = dbscan.run(dataset, 5, 2);\r\nconsole.log(clusters, dbscan.noise);\r\n\r\n/*\r\nRESULT:\r\n[\r\n    [0,1,2],\r\n    [3,4,5],\r\n    [6,7,9],\r\n    [8]\r\n]\r\n\r\nNOISE: [ 8 ]\r\n*/\r\n```\r\n\r\n### OPTICS\r\n\r\n```\r\n// REGULAR DENSITY\r\nvar dataset = [\r\n    [1,1],[0,1],[1,0],\r\n    [10,10],[10,11],[11,10],\r\n    [50,50],[51,50],[50,51],\r\n    [100,100]\r\n];\r\n\r\nvar optics = new OPTICS();\r\nvar clusters = optics.run(dataset, 2, 2);\r\nvar plot = optics.getReachabilityPlot();\r\nconsole.log(clusters, plot);\r\n\r\n/*\r\nRESULT:\r\n[\r\n    [0,1,2],\r\n    [3,4,5],\r\n    [6,7,8],\r\n    [9]\r\n]\r\n*/\r\n```\r\n\r\n```\r\n// VARYING DENSITY\r\nvar dataset = [\r\n    [0,0],[6,0],[-1,0],[0,1],[0,-1],\r\n    [45,45],[45.1,45.2],[45.1,45.3],[45.8,45.5],[45.2,45.3],\r\n    [50,50],[56,50],[50,52],[50,55],[50,51]\r\n];\r\n\r\nvar optics = new OPTICS();\r\nvar clusters = optics.run(dataset, 6, 2);\r\nvar plot = optics.getReachabilityPlot();\r\nconsole.log(clusters, plot);\r\n\r\n/*\r\nRESULT:\r\n[\r\n    [0, 2, 3, 4],\r\n    [1],\r\n    [5, 6, 7, 9, 8],\r\n    [10, 14, 12, 13],\r\n    [11]\r\n]\r\n*/\r\n```\r\n\r\n## Testing\r\n\r\nOpen folder and run:\r\n```\r\nmocha -R spec\r\n```\r\n\r\n## License\r\n\r\nSoftware is licensed under MIT license.\r\nFor more information check LICENSE file.",
  "readmeFilename": "README.md",
  "_id": "density-clustering@1.0.1",
  "dist": {
    "shasum": "7095dda0c3769c0e73ee2b1862c4c008bf00a055"
  },
  "_from": "density-clustering@",
  "_resolved": "https://registry.npmjs.org/density-clustering/-/density-clustering-1.0.1.tgz"
}
